version: '3.3'

services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    volumes:
      - ./api/:/home/app/
      - node_modules_api:/home/app/node_modules
      - yarn_cache_api:/usr/yarn-cache
    depends_on:
      - router
      - postgres
    restart: always  

  # auth:
  #   build:
  #     context: ./auth
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./auth/:/home/app/
  #     - node_modules_auth:/home/app/node_modules
  #     - yarn_cache_auth:/usr/yarn-cache
  #   depends_on:
  #     - router
  #   restart: always  

  # dashboard:
  #   build:
  #     context: ./dashboard
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./dashboard/:/home/app/
  #     - node_modules_dashboard:/home/app/node_modules
  #     - yarn_cache_dashboard:/usr/yarn-cache
  #   depends_on:
  #     - router
  #   restart: always  
  
  # forms:
  #   build:
  #     context: ./forms
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./forms/:/home/app/
  #     - node_modules_forms:/home/app/node_modules
  #     - yarn_cache_forms:/usr/yarn-cache
  #   depends_on:
  #     - router
  #   restart: always

  router:
    build:
      context: ./router
      dockerfile: Dockerfile
    ports:
      - '8080:8000'
    restart: always

  postgres:
    container_name: 'postgres'
    image: 'mdillon/postgis:10'
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - '6543:5432'
 
volumes:
  yarn_cache_api:
  yarn_cache_auth:
  yarn_cache_forms:
  yarn_cache_dashboard:
  node_modules_api:
  node_modules_auth:
  node_modules_forms:
  node_modules_dashboard:
  postgres:
